////  XML2NSDictionary.m//  Expresso////  Created by Arol Vi√±olas Martinez on 01/12/10.//  Copyright 2010 FIB (UPC). All rights reserved.//#import "XML2NSDictionary.h"@implementation XML2NSDictionary@synthesize result;- (id)init {    // Assign self to value returned by super's designated initializer    // Designated initializer for NSObject is init    self = [super init];    if (self) {        stackNames = [[NSMutableArray alloc] init];		currentName = [[NSString alloc] initWithString:@""];		result = [[NSMutableDictionary alloc] init];    }    return self;}-(void)parserDidStartDocument:(NSXMLParser *)parser{	NSLog(@"XML2NSDictionary: Starts document");}-(void)parserDidEndDocument:(NSXMLParser *)parser{	NSLog(@"XML2NSDictionary: Ends Document");	result = [[NSMutableDictionary alloc] init];	[result setValue:currentDictionary forKey:currentName];}-(void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict{	NSLog(@"XML2NSDictionary: Starts ELEMENT %@", elementName);	//Checking if last name is equal than this one	if ([currentName isEqualToString:elementName]) {		NSLog(@"Canviem el Dictionary per l'array");		isArray = YES;				//Pulling dictionary from stack and pushing an array		if ([[stackNames lastObject] isKindOfClass:[NSMutableDictionary class]]) {						currentDictionary = [stackNames lastObject];			currentArray = [NSMutableArray arrayWithArray:[currentDictionary allValues]];						[stackNames removeLastObject];			[stackNames addObject:currentArray];						[currentArray release];			[currentDictionary release];		}	}		currentName = elementName;	currentDictionary = [[NSMutableDictionary alloc] init];		[stackNames addObject:currentName];	[stackNames addObject:currentDictionary];}-(void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName{	NSLog(@"XML2NSDictionary: Ends ELEMENT %@", elementName);	currentName = elementName;	//Getting node data	NSObject *data = [stackNames lastObject];	[stackNames removeLastObject];	//Pulling node name	[stackNames removeLastObject];			NSObject *temp = [stackNames lastObject];	if (temp) {		if ([temp isKindOfClass:[NSMutableArray class]]) {			//We work with an array			[(NSMutableArray*)temp addObject:data];		}else {			//We work with a dictionary			[(NSMutableDictionary*)temp setValue:data forKey:currentName];		}    }else {		currentDictionary = (NSMutableDictionary*)data;	}}-(void)parser:(NSXMLParser *)parser foundCDATA:(NSData *)CDATABlock{	NSLog(@"XML2NSDictionary: Found CDATA %@", [[NSString alloc]											 initWithData:CDATABlock encoding:NSUTF8StringEncoding]);		//Pulling NSDictionary	[stackNames removeLastObject];		//Pushing node data	NSString *nodeData = [[NSString alloc] initWithData:CDATABlock encoding:NSUTF8StringEncoding];	[stackNames addObject:nodeData];}-(void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string{	if ([[[string stringByTrimmingCharactersInSet:[NSCharacterSet newlineCharacterSet]]			stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]]			isEqualToString:@""])		return;			NSLog(@"XML2NSDictionary: Found CHARS %@", string);	//Pulling NSDictionary	[stackNames removeLastObject];		//Pushing node data	NSString *nodeData = string;	[stackNames addObject:nodeData];}-(void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError{	NSLog(@"Error mentre es parsejava el document");}@end