////  LoginViewController.m//  Expresso////  Created by David Cortés Fulla on 01/12/10.//  Copyright 2010 Facultat d'Informatica de Barcelona (UPC). All rights reserved.//#import "LoginViewController.h"#import "XML2NSDictionary.h"@implementation LoginViewController@synthesize nombre;@synthesize contrasena;@synthesize inicia;#pragma mark -#pragma mark Controlador de l'inici de sessió- (IBAction)iniciaSessio{	NSLog(@"Botó apretat");	NSString *nom = [nombre text];	NSString *pass = [contrasena text];		NSLog(@"%@",nom);	NSLog(@"%@",pass);		responseData = [[NSMutableData data] retain];		NSMutableURLRequest *request = [NSMutableURLRequest                                     requestWithURL:[NSURL URLWithString:@"http://expresso.webservice/orders/ident_client"]];		NSString *params = [[NSString alloc] initWithFormat:@"user=%@&pass=%@",nom,pass];	NSLog(@"%@",params);	[request setHTTPMethod:@"POST"];	[request setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];	[[NSURLConnection alloc] initWithRequest:request delegate:self];		[params release];	}#pragma mark -#pragma mark Delegat del NSURLConnection- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data{		NSString *datos = [[NSString alloc]  initWithBytes:[data bytes]												length:[data length] encoding: NSUTF8StringEncoding];	NSLog(@"%@",datos);		[datos release];		//Comencem el parse del xml de login	NSLog(@"Inicialitzem el parserDelegate");	XML2NSDictionary* parseDelegate = [[XML2NSDictionary alloc] init];	NSURL *url = [[NSURL alloc] initWithString:@"http://expresso.webservice/orders/get_carta"];	NSXMLParser *parser = [[NSXMLParser alloc] initWithContentsOfURL:url];	parser.delegate = parseDelegate;		NSLog(@"Parsejem");	[parser parse];			while (parseDelegate.result==nil) {}		NSLog(@"%@",[parseDelegate.result class]);	NSMutableDictionary *carta = parseDelegate.result;	NSObject *unrecognizedObject = [[[parseDelegate.result valueForKey:@"carta"] 									valueForKey:@"productes"] 									objectAtIndex:0];		//NSArray *tempArray = [[parseDelegate.result valueForKey:@"carta"] 	//					  valueForKey:@"productes"];		//NSLog(@"%@", [arrResult componentsJoinedByString:@" "]);		//NSLog(@"%@", [[[[parseDelegate.result valueForKey:@"carta"] valueForKey:@"productes"] allKeys] componentsJoinedByString:@" "]);	//NSLog(@"%@",[tempArray class]);	//NSLog(@"%@",[tempArray componentsJoinedByString:@","]);		NSArray *arrResult = [(NSMutableDictionary*)unrecognizedObject allValues];	NSLog(@"Keys: %@", [arrResult componentsJoinedByString:@" "]);			//NSLog(@"Resultat: %@", [unrecognizedObject class]);		[url release];	[parser release];		//[arrResult release];	}- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error{	NSLog(@"%@",error);}/* // The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad. - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil { if ((self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil])) { // Custom initialization } return self; } */ // Implement viewDidLoad to do additional setup after loading the view, typically from a nib. - (void)viewDidLoad { [super viewDidLoad];	 NSLog(@"arriba aqui"); } /* // Override to allow orientations other than the default portrait orientation. - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { // Return YES for supported orientations return (interfaceOrientation == UIInterfaceOrientationPortrait); } */- (void)didReceiveMemoryWarning {    // Releases the view if it doesn't have a superview.    [super didReceiveMemoryWarning];        // Release any cached data, images, etc that aren't in use.}- (void)viewDidUnload {    [super viewDidUnload];    // Release any retained subviews of the main view.    // e.g. self.myOutlet = nil;}- (void)dealloc {    [super dealloc];}@end